import pandas as pd

# Sample data
data = {
    'Age' : [25, 30, 35, 50, 28, 40, 50, 60, 32, 45],
    'Salary' : [50000, 1200000, 70000, 60000, 80000, 55000, 85000, 90000, 1500000, 62000]
}
df = pd.DataFrame(data)

# Mean
mean_age = df['Age'].mean()
mean_salary = df['Salary'].mean()

print('Mean age: ', mean_age)
print('Mean Salary: ', mean_salary)

"""# Descreptive Statistics - Median

Def: the median is the middle value in a set of numbers. It separates the higher half from the lower half of the dataset.

Use Case: the median is used to understand the central tendancy of data, especially when the data has outliers, such as median household income.


"""

# Median

median_age = df['Age'].median()
median_salary = df['Salary'].median()

print('Median Age: ', median_age)
print('Median Salary: ', median_salary)

"""# Descreptive Statistics - Mode

Def: the mode is the value that appears most frequently in a dataset.

Use Case: the mode is used in retail to find the most common product or the most common transaction amount.
"""

# Mode
mode_age = df['Age'].mode()[0]
mode_salary = df['Salary'].mode()[0]

print('Mode Age: ', mode_age)
print('Mode Salary: ', mode_salary)

"""# Descreptive Statistics - Standard Deviation

Use Case: SD is used in finance to measure the risk or volatility of an investment.
"""

# Standard deviation
std_age = df['Age'].std()
std_salary = df['Salary'].std()

print("Standard deviation Age: ", std_age)
print("Standard deviation Salary: ", std_salary)

"""# Descreptive Statistics - Variance

Def: the variance measures the dispersion of a set of values. It is the average of the squared differences from the mean.

Use Case: Variance is used in finance to access the spread between numbers in a dataset, such as investment returns.
"""

# Variance
var_age = df['Age'].var()
var_salary = df['Salary'].var()

print("Variance age: ", var_age)
print("Variance salary: ", var_salary)

"""# Probability Distributions - Normal Distribution or Gaussian Dist.

Def: It is a continuous p.d that is symmetrical around the mean.

Use Case: It is used in finance to model returns on investment and in quality control to monitor product defects.
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats

# Normal Distribution
mu, sigma = 0, 0.1
s = np.random.normal(mu, sigma, 1000)

# Plotting the histogram
count, bins, ignored = plt.hist(s, 30, density=True)
plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) * np.exp(-(bins - mu)**2 / (2 * sigma**2)), linewidth=2, color='r')
plt.title("Normal Distribution")
plt.show()

"""# Probability Distribution - Binomial Distribution

Def: It is a discrete p.d thta models the number of successes in a fixed number of trails, with each trial having two possible outcomes.

Use Case: The b.d is used in quality control to model the no. of defective items in a batch of products.
"""

# Binomial Distribution

n, p = 10, 0.5
binomial = np.random.binomial(n, p, 1000)

# Plotting the histogram
plt.hist(binomial, bins=10, density=True, alpha=0.6, color='b')
plt.title("Binomial Distribution")
plt.show()

"""# Quartiles

Def: Quartiles are values that divide the dataset into 4 equal parts. They are used to understand the distribuiton of the data and are particularly useful in identifying the spread and the presence of outliers.

Q1 (First Quartile): The median of the lower half of the dataset (25th percentile).

Q2 (Second Quartile or Median): The median of the dataset (50th percentile).

Q3 (Third Quartile): The median of the upper half of the dataset (75th percentile).

IQR (Interquartile Range): The difference between the third and first quartiles (IQR = Q3 - Q1). IQR is used to measure the spread of the middle 50% of the data.

EXAMPLE:

dataset: [1,2,3,4,5,6,7,8,9,10]

Q1: Median of [1,2,3,4,5] is 3

Q2: Median of entire dataset is 5.5

Q3: Median of [6,7,8,9,10] is 8

IQR: IQR = Q3-Q1 = 8 - 3 = 5
"""

import numpy as np

# Sample data
data = [1,2,3,4,5,6,7,8,9,10]

# Calculate Quarties
Q1 = np.percentile(data,25)
Q2 = np.median(data)
Q3 = np.percentile(data,75)
IQR = Q3 - Q1

print(f"Q1 : {Q1}")
print(f"Q2 (Median): {Q2}")
print(f"Q3: {Q3}")
print(f"IQR: {IQR}")

"""# Z-Scores

Def: x - mu / sd

# Interpretation:

A Z-score of 0 indicates that the data point's score is identical to the mean score.

A Z-score of 1.0 indicates a value that is one standard deviation from the mean.

Z-scores can be positive or negative, indicating whether they're above or below the mean, and by how many standard deviations.
"""

import numpy as np

# Sample data
data = [1,2,3,4,5,6,7,8,9,10]

# Calculation mean and standard deviation
mean = np.mean(data)
std_dev = np.std(data)

# Calculate Z-Scores
z_scores = [(x - mean) / std_dev for x in data]

print(f"Mean: {mean}")
print(f"Standard Deviation: {std_dev}")
print(f"Z-scores: ", z_scores)